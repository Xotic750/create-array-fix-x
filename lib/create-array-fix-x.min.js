!function(f){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=f();else if("function"==typeof define&&define.amd)define([],f);else{("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).returnExports=f()}}(function(){return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a="function"==typeof require&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n||e)},l,l.exports,e,t,n,r)}return n[o].exports}for(var i="function"==typeof require&&require,o=0;o<r.length;o++)s(r[o]);return s}({1:[function(_dereq_,module,exports){/**
 * @file Address Safari 10.1 array bug: https://bugs.webkit.org/show_bug.cgi?id=170264
 * @version 0.0.1
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module create-array-fix-x
 */
"use strict";var test=[0,2147483648];test.shift(),test[1]=1;var ArraySubClass;if(1===test.length){var reIsUint=/^(?:0|[1-9]\d*)$/,maxLength=Math.pow(2,32)-1,handler={get:function _get(obj,prop){var backing=obj["[[backing]]"];return prop in backing?backing[prop]:obj[prop]},has:function _has(obj,prop){return prop in obj["[[backing]]"]||prop in obj},set:function _set(obj,prop,value){if("length"===prop&&(value<0||value>maxLength))throw new RangeError("Invalid array length");var backing=obj["[[backing]]"];return reIsUint.test(prop)&&prop>=backing.length&&(backing.length=Number(prop)+1),backing[prop]=value,!0}};ArraySubClass=Function("init","return class ArraySubClass extends Array {constructor(){super();return init(this,arguments);}}")(function _init(context,args){var backing=Object.defineProperty(Object.create(null),"length",{value:0,writable:!0});Object.defineProperty(context,"[[backing]]",{value:backing,writable:!0});var thisArg=new Proxy(context,handler);return args.length>0&&(1===args.length?backing.length=args[0]>>>0:Array.prototype.push.apply(thisArg,args)),thisArg}),Object.defineProperties(ArraySubClass.prototype,{concat:{configurable:!0,value:function concat(value1){var args=Array.prototype.slice.call(arguments);args.unshift(this);var concated=Array.prototype.concat.apply([],args);return concated.reduce(function(arr,item,index){return arr[index]=item,arr},new ArraySubClass(concated.length))}},entries:{configurable:!0,value:function entries(){var iterable=Array.prototype.entries.call(this),nextFn=iterable.next;return Object.defineProperty(iterable,"next",{configurable:!0,value:function next(){var iteratorObject=nextFn.call(this);return iteratorObject.done?iteratorObject:{done:!1,value:new ArraySubClass(iteratorObject.value[0],iteratorObject.value[1])}}.bind(iterable)})}},filter:{configurable:!0,value:function filter(callBack){if(void 0===this||null===this)throw new TypeError("Cannot call method on "+this);if("function"!=typeof callBack)throw new TypeError(callBack+" is not a function");var thisArg,object=Object(this),length=object.length>>>0;arguments.length>1&&(thisArg=arguments[1]);for(var noThis=void 0===thisArg,result=new ArraySubClass,i=0;i<length;i+=1)if(i in object){var item=object[i];(noThis?callBack(item,i,object):callBack.call(thisArg,item,i,object))&&result.push(item)}return result}},map:{configurable:!0,value:function map(callBack){if(void 0===this||null===this)throw new TypeError("Cannot call method on "+this);if("function"!=typeof callBack)throw new TypeError(callBack+" is not a function");var thisArg,object=Object(this),length=object.length>>>0;arguments.length>1&&(thisArg=arguments[1]);var noThis=void 0===thisArg,result=new ArraySubClass;result.length=length;for(var i=0;i<length;i+=1)if(i in object){var item=object[i];result[i]=noThis?callBack(item,i,object):callBack.call(thisArg,item,i,object)}return result}}})}module.exports=function createArray(){var array=ArraySubClass?new ArraySubClass:[];return arguments.length>0&&(1===arguments.length?array.length=arguments[0]>>>0:array.push.apply(array,arguments)),array}},{}]},{},[1])(1)});